<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code Blocks</title>
    <link>https://htafer.github.io/</link>
    <description>Recent content on Code Blocks</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018-2019</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 +0200</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>About</title>
      <link>https://htafer.github.io/posts/about/</link>
      <pubDate>Thu, 07 Feb 2019 00:00:00 +0100</pubDate>
      
      <guid>https://htafer.github.io/posts/about/</guid>
      <description>&lt;p&gt;This is the home of my blog!
BLABLALBa&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Blogging from emacs with HUGO and the academic themes</title>
      <link>https://htafer.github.io/post/hugo/</link>
      <pubDate>Thu, 07 Feb 2019 00:00:00 +0100</pubDate>
      
      <guid>https://htafer.github.io/post/hugo/</guid>
      <description>&lt;p&gt;I am starting to blog from emacs and the org-mode and publish the posts on my github-hosted page.
Below I list a of link that helped me to set everything up:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://gohugo.io/getting-started/installing/#quick-install&#34; target=&#34;_blank&#34;&gt;hugo installation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-zip&#34; target=&#34;_blank&#34;&gt;Academic theme install&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://ox-hugo.scripter.co/&#34; target=&#34;_blank&#34;&gt;ox-hugo mode for emacs&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://gohugo.io/hosting-and-deployment/hosting-on-github/&#34; target=&#34;_blank&#34;&gt;Update of the blog on github&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since I document my work in org-formatted file, this setup helps me to
achieve both documentation and blog publication in one single
step. There a lot of great resources on this topic and the three above
link should be fine to dive into it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>KEGG analysis of regulated genes</title>
      <link>https://htafer.github.io/post/kegg2/</link>
      <pubDate>Fri, 08 Feb 2019 00:00:00 +0100</pubDate>
      
      <guid>https://htafer.github.io/post/kegg2/</guid>
      <description>

&lt;p&gt;I have been terminating a project where proteomic profiles of
of a plant seed have been done at a various developmental
stages. On of the question was to look at &lt;strong&gt;when which enzyme shows up
in KEGG pathway.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;data&#34;&gt;DATA&lt;/h2&gt;

&lt;p&gt;In terms of data we have for each stage a list of proteins
with at least one protein-specific peptide. My main work was to look
at this list of gene and find enriched functional annotation
terms. The annotation was done with Interproscan, eggNog, Cazy, Merops
and TCDB. Gene Ontology and KEGG pathways were extracted from &lt;a href=&#34;http://eggnogdb.embl.de/&#34; target=&#34;_blank&#34;&gt;eggNog&lt;/a&gt;
and &lt;a href=&#34;https://www.ebi.ac.uk/interpro/search/sequence-search&#34; target=&#34;_blank&#34;&gt;Interproscan&lt;/a&gt;. The enrichment was made in R with the package
GOstats&lt;/p&gt;

&lt;p&gt;&lt;a id=&#34;table--Table summary enrichment&#34;&gt;&lt;/a&gt;
&lt;div class=&#34;table-caption&#34;&gt;
  &lt;span class=&#34;table-number&#34;&gt;&lt;a href=&#34;#table--Table summary enrichment&#34;&gt;Table 1&lt;/a&gt;&lt;/span&gt;:
  Overview of the number of proteins with at least 1 peptide in each developmental stage.
&lt;/div&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;GW&lt;/th&gt;
&lt;th&gt;GH&lt;/th&gt;
&lt;th&gt;GB&lt;/th&gt;
&lt;th&gt;YB&lt;/th&gt;
&lt;th&gt;BB&lt;/th&gt;
&lt;th&gt;DRY&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Proteins with at least 1 peptide&lt;/td&gt;
&lt;td&gt;1557&lt;/td&gt;
&lt;td&gt;1623&lt;/td&gt;
&lt;td&gt;783&lt;/td&gt;
&lt;td&gt;762&lt;/td&gt;
&lt;td&gt;855&lt;/td&gt;
&lt;td&gt;614&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;a id=&#34;table--Table summary enrichment&#34;&gt;&lt;/a&gt;
&lt;div class=&#34;table-caption&#34;&gt;
  &lt;span class=&#34;table-number&#34;&gt;&lt;a href=&#34;#table--Table summary enrichment&#34;&gt;Table 2&lt;/a&gt;&lt;/span&gt;:
  Number of enriched annotation for each category and developmental stage.
&lt;/div&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Enriched term&lt;/th&gt;
&lt;th&gt;GW&lt;/th&gt;
&lt;th&gt;GH&lt;/th&gt;
&lt;th&gt;GB&lt;/th&gt;
&lt;th&gt;YB&lt;/th&gt;
&lt;th&gt;BB&lt;/th&gt;
&lt;th&gt;DRY&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CDD&lt;/td&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Cazy&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;GO&lt;/td&gt;
&lt;td&gt;532&lt;/td&gt;
&lt;td&gt;493&lt;/td&gt;
&lt;td&gt;336&lt;/td&gt;
&lt;td&gt;373&lt;/td&gt;
&lt;td&gt;332&lt;/td&gt;
&lt;td&gt;314&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Gene3D&lt;/td&gt;
&lt;td&gt;84&lt;/td&gt;
&lt;td&gt;77&lt;/td&gt;
&lt;td&gt;48&lt;/td&gt;
&lt;td&gt;55&lt;/td&gt;
&lt;td&gt;62&lt;/td&gt;
&lt;td&gt;42&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Hamap&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;IPR&lt;/td&gt;
&lt;td&gt;320&lt;/td&gt;
&lt;td&gt;326&lt;/td&gt;
&lt;td&gt;222&lt;/td&gt;
&lt;td&gt;229&lt;/td&gt;
&lt;td&gt;241&lt;/td&gt;
&lt;td&gt;183&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;KEGG&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Merops&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;MetaCyc&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;MobiDBLite&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;PANTHER&lt;/td&gt;
&lt;td&gt;67&lt;/td&gt;
&lt;td&gt;70&lt;/td&gt;
&lt;td&gt;76&lt;/td&gt;
&lt;td&gt;85&lt;/td&gt;
&lt;td&gt;99&lt;/td&gt;
&lt;td&gt;77&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;PIRSF&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;PRINTS&lt;/td&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Pfam&lt;/td&gt;
&lt;td&gt;116&lt;/td&gt;
&lt;td&gt;118&lt;/td&gt;
&lt;td&gt;71&lt;/td&gt;
&lt;td&gt;81&lt;/td&gt;
&lt;td&gt;91&lt;/td&gt;
&lt;td&gt;57&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;ProDom&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;ProSitePatterns&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;ProSiteProfiles&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;36&lt;/td&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Reactome&lt;/td&gt;
&lt;td&gt;38&lt;/td&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;SFLD&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;SMART&lt;/td&gt;
&lt;td&gt;42&lt;/td&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;SUPERFAMILY&lt;/td&gt;
&lt;td&gt;86&lt;/td&gt;
&lt;td&gt;81&lt;/td&gt;
&lt;td&gt;55&lt;/td&gt;
&lt;td&gt;52&lt;/td&gt;
&lt;td&gt;63&lt;/td&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;TIGRFAM&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;eggNog&lt;/td&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;td&gt;42&lt;/td&gt;
&lt;td&gt;42&lt;/td&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;55&lt;/td&gt;
&lt;td&gt;42&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;tcdb&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Now we would like to paint for each KEGG pathways the enzyme showing
up. To this aim we will use the &lt;em&gt;R&lt;/em&gt;-package &lt;strong&gt;&lt;a href=&#34;http://bioconductor.org/packages/release/bioc/html/pathview.html&#34; target=&#34;_blank&#34;&gt;pathview&lt;/a&gt;&lt;/strong&gt;, which &lt;em&gt;&amp;rdquo;&amp;hellip;maps and renders a wide variety of biological data on relevant pathway graphs. All users need is to supply their data and specify the target pathway. Pathview automatically downloads the pathway graph data, parses the data file, maps user data to the pathway, and render pathway graph with the mapped data. In addition, Pathview also seamlessly integrates with pathway and gene set (enrichment) analysis tools for large-scale and fully automated analysis&amp;hellip;.&amp;rdquo;&lt;/em&gt;.
Since the annotation of the plant of interest might not be complete, the peptide mapping
process was achieved by also considering protein from other plants,
i.e. from more than one organism.&lt;/p&gt;

&lt;p&gt;The problem is that pathview either works with a species specific set
of genes ID or with the corresponding KEGGID. A solution is to convert
the gene ID to KEGG ID. To this aim we generated a gene ID to EC
dictionary from the &lt;strong&gt;IPR&lt;/strong&gt; annotation. The EC to KEGG was obtained the
&lt;a href=&#34;http://rest.kegg.jp&#34; target=&#34;_blank&#34;&gt;KEGG Rest Api&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  curl -f http://rest.kegg.jp/link/ec/ko | sed -r &#39;s/ko://&#39; | sed -r &#39;s/ec:/EC:/&#39; &amp;gt; KO2EC.list
#KO2EC file looks then like
 #KEGG    EC
 #K00001  EC:1.1.1.1
 #K00002  EC:1.1.1.2
 #K00003  EC:1.1.1.3
 #K00004  EC:1.1.1.4
 #K00004  EC:1.1.1.303
 #K00005  EC:1.1.1.6
 #K00006  EC:1.1.1.8
 #K00007  EC:1.1.1.11
 #K00008  EC:1.1.1.14
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&#34;src-block-caption&#34;&gt;
  &lt;span class=&#34;src-block-number&#34;&gt;Code Snippet 1&lt;/span&gt;:
  Downloading KO / EC file
&lt;/div&gt;

&lt;p&gt;Finally the enrichment files have the following formatting&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;&amp;quot;KEGGID&amp;quot;        &amp;quot;Pvalue&amp;quot;        &amp;quot;OddsRatio&amp;quot;     &amp;quot;ExpCount&amp;quot;      &amp;quot;Count&amp;quot; &amp;quot;Size&amp;quot;  &amp;quot;Term&amp;quot;  &amp;quot;fdr&amp;quot;   &amp;quot;desc&amp;quot;  &amp;quot;genes&amp;quot;
 &amp;quot;ko00630&amp;quot;       1.48869690281379e-05    8.83636363636364        1.69491525423729        9       25      NA      0.000699687544322481    &amp;quot;Glyoxylate_and_dicarboxylate_metabolism&amp;quot;       &amp;quot;A0A067JFR1, A0A067JMA6, A0A067K0M8, A0A067KN15, A5X4N8, C6F1E5, K9MCB1, Q84XZ9, W9SPU5&amp;quot;
 &amp;quot;ko00020&amp;quot;       3.35093741041604e-05    11.8849902534113        1.08474576271186        7       16      NA      0.00078747029144777     &amp;quot;Citrate_cycle_(TCA_cycle)&amp;quot;     &amp;quot;A0A067JFR1, A0A067JMA6, A0A067JUK1, A0A067K488, A0A067LBG3, A0A0B2SEY3, I1MGE6&amp;quot;
 &amp;quot;ko00720&amp;quot;       0.000359810652978868    7.08187134502924        1.49152542372881        7       22      NA      0.00485214527417342     &amp;quot;Carbon_fixation_pathways_in_prokaryotes&amp;quot;       &amp;quot;A0A067JFR1, A0A067JMA6, A0A067JUK1, A0A067LBG3, A0A0B2SEY3, I1MGE6, J9Y1K3&amp;quot;
 &amp;quot;ko00380&amp;quot;       0.000412948533972206    12.3446327683616        0.745762711864407       5       11      NA      0.00485214527417342     &amp;quot;Tryptophan_metabolism&amp;quot; &amp;quot;A0A067K488, C6F1E5, K9MCB1, Q84XZ9, W9SPU5&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;processing&#34;&gt;PROCESSING&lt;/h2&gt;

&lt;p&gt;Once we have the set of enriched KEGG pathway with the corresponding
gene name, the conversion files from GeneID-&amp;gt;EC-&amp;gt;KEGGID, we
can start genering colorised KEGG pathways.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;#In work2/fatemeh/proteinFunctionalAnnotation/enrichment2
#Library used to colorise KEGG pathways
library(pathwview)

#Read in the GENE-&amp;gt;EC dictionary
dictUniEC&amp;lt;-read.table(&amp;quot;./helperfile/Gene_EC.dictionary&amp;quot;,header=T)
#Read the EC2KO dictionary
dictECKEGGID&amp;lt;-read.table(&amp;quot;/media/htafer/work2/share/database/KO2EC.list&amp;quot;,header=T)
#Replace EC: with &amp;quot;&amp;quot;
dictECKEGGID$EC&amp;lt;-gsub(&amp;quot;EC:&amp;quot;,&amp;quot;&amp;quot;,dictECKEGGID$EC)
#Get the list of files containing enriched KEGG
files&amp;lt;-list.files(path=&amp;quot;.&amp;quot;,pattern=&amp;quot;list.KEGG.csv$&amp;quot;)
#for each file
for (f in files){
     # get the data
     data&amp;lt;-read.table(f,quote=&#39;&amp;quot;&#39;,header=T)
     # select enrichment q-balue &amp;lt; 0.05
     data&amp;lt;-data[data$fdr&amp;lt;0.05,]
     # replace ko with &amp;quot;&amp;quot;
     data$KEGGID&amp;lt;-gsub(&amp;quot;ko&amp;quot;,&amp;quot;&amp;quot;,data$KEGGID)
     # replace ec with EC
     data$ECs&amp;lt;-gsub(&amp;quot;ec:&amp;quot;,&amp;quot;EC:&amp;quot;,data$genes)
     # for each gene inside the enriched annotation
     for(i in 1:dim(data)[1]){
	#Get contig for give kegg
	contigs&amp;lt;-strsplit(as.character(data$ECs),&amp;quot;,&amp;quot;)[[i]]
	#Rmove white space
	contigs&amp;lt;-gsub(&amp;quot; &amp;quot;,&amp;quot;&amp;quot;,contigs)
	#id conversion
	temp&amp;lt;-unique(dictECKEGGID$KEGG[dictECKEGGID$EC %in% unique(dictUniEC$ec[dictUniEC$uni %in% contigs])])

					 #                                        #Read dictionary
					 #
					 #    matchLOC&amp;lt;-dictLOCEC[dictLOCEC$EC %in% contigs,1]
					 #                                        #Remove the loc part since it is not used in KEGG
					 #    contigs&amp;lt;-gsub(&amp;quot;LOC&amp;quot;,&amp;quot;&amp;quot;,matchLOC)
					 #                                        #Start analysis
					 #    pathview(contig,pathway.id=sprintf(&amp;quot;%05s&amp;quot;,data$KEGGID[i]),species=&amp;quot;jcu&amp;quot;,out.suffix=paste(data$KEGGID[i],&amp;quot;_&amp;quot;,gsub(&amp;quot; &amp;quot;,&amp;quot;&amp;quot;,data$ECs[i]),sep=&amp;quot;&amp;quot;))
	#Plot with pathview
	 try(pathview(as.character(temp),pathway.id=data$KEGGID[i],species=&amp;quot;ko&amp;quot;,gene.idtype=&amp;quot;kegg&amp;quot;,plot.col.key= FALSE,out.suffix=paste(data$KEGGID[i],f,sep=&amp;quot;_&amp;quot;)))
     }
 }
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&#34;src-block-caption&#34;&gt;
  &lt;span class=&#34;src-block-number&#34;&gt;Code Snippet 2&lt;/span&gt;:
  &lt;i&gt;R&lt;/i&gt;-code used to colorize the overrpresented KEGG pathways with the correspponding enzymes
&lt;/div&gt;

&lt;h2 id=&#34;results&#34;&gt;RESULTS&lt;/h2&gt;

&lt;p&gt;The resulting pathways are now showing in red the genes with at least one peptide.&lt;/p&gt;

&lt;p&gt;&lt;a id=&#34;org9655a82&#34;&gt;&lt;/a&gt;&lt;/p&gt;




&lt;figure&gt;

&lt;img src=&#34;https://htafer.github.io/img/ko00020.00020_jatCur.yb.csv.list.KEGG.csv.png&#34; alt=&#34;Figure 1: Colorized KEGG pathway rendered by pathview&#34; /&gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; &gt;
  
  &lt;p&gt;
    Figure 1: Colorized KEGG pathway rendered by pathview
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Pathview is a great tool to annotate metabolic pathway from KEGG. The
main difficulty is to get the right gene ID for pathview to produce
the desired plot. Once this is ensured publication ready plots are
easily produced by this great package.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Nanopore Basecalling</title>
      <link>https://htafer.github.io/post/nanoporebasecalling/</link>
      <pubDate>Fri, 08 Feb 2019 00:00:00 +0100</pubDate>
      
      <guid>https://htafer.github.io/post/nanoporebasecalling/</guid>
      <description>

&lt;h2 id=&#34;context&#34;&gt;Context&lt;/h2&gt;

&lt;p&gt;We are currently sequencing old (500-1500 years old) statues,
manuscripts and parchments in order to assess which microorganisms
grow/grew on them. To this aim illumina, torrent and now nanopore
sequencing are being used. Nanopore sequencing is being done in our
lab. The main problem once we got the fast5 data is to basecall them
and do further processing. The next few paragraph present an overview
of the step we are doing:&lt;/p&gt;

&lt;h2 id=&#34;basecalling-on-cpu&#34;&gt;Basecalling on CPU&lt;/h2&gt;

&lt;p&gt;Until recently Albacore was the official basecaller from ONT. This is
now archived and guppy is the new preferred software for everything
basecalling. Guppy can run both on the CPU and GPU (Nvidia only).
Installation under ubuntu 16.04 is relatively easy and well explained
&lt;a href=&#34;https://community.nanoporetech.com/protocols/Guppy-protocol-preRev/v/gpb%5F2003%5Fv1%5Frevg%5F14dec2018&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;. Since we do not have access to a GPU we will install the
CPU-based guppy.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get update
sudo apt-get install wget lsb-release
export PLATFORM=$(lsb_release -cs)
wget -O- https://mirror.oxfordnanoportal.com/apt/ont-repo.pub | sudo apt-key add -
echo &amp;quot;deb http://mirror.oxfordnanoportal.com/apt ${PLATFORM}-stable non-free&amp;quot; | sudo tee /etc/apt/sources.list.d/nanoporetech.sources.list
sudo apt-get update
sudo apt install ont-guppy-cpu
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Guppy has preconfigured configuration scripts that can be specified by setting the
&amp;ndash;flow-cell and &amp;ndash;kit on the command line:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;guppy_basecaller -r \ #recursive search for fast5 files
		 --input_path /media/htafer/backup8TB/nanopore/20181003_1027_/fast5/ \ # input directory
		 --save_path . \ #output directory
		 --flowcell FLO-MIN106 \ # Flow cell type
		 --kit SQK-LSK108 \ #kit used during sequencing
		 --cpu_threads_per_caller 8 #thread number
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A 6 years old AMD AMD FX-8370E is basecalling approx. 5-10 reads/s,
approximately the speed of a laptop with a 2018 i7-8550.&lt;/p&gt;

&lt;h2 id=&#34;basecalling-on-mx150-nvidia&#34;&gt;Basecalling on MX150 Nvidia&lt;/h2&gt;

&lt;p&gt;I have a laptop with an intel integraded graphics and a MX150 video
card.  Before using the MX150 for basecalling, I configured my system
to use the integrated for display and the nvidia card for
compute. Base Ubuntu configuration for the t480 was taken from the
great &lt;a href=&#34;https://www.aqu.lu/2018/08/15/t480-configs.html&#34; target=&#34;_blank&#34;&gt;Luca&amp;rsquo;s Blog&lt;/a&gt;. Since I have Ubuntu 18.04 but Guppy&amp;rsquo;s GPU-version
is currently only working in Ubuntu under Ubuntu 16.04 I followed the
same path as the recently blog post of &lt;a href=&#34;https://medium.com/@kepler%5F00/nanopore-gpu-basecalling-using-guppy-on-ubuntu-18-04-and-nvidia-docker-v2-with-a-rtx-2080-d875945e5c8d&#34; target=&#34;_blank&#34;&gt;Winston Koh&lt;/a&gt;.  He uses a nvidia
docker image with cuda and CNN under Ubuntu 16 and subsequently
installs guppy via the dpkg installer.&lt;/p&gt;

&lt;p&gt;We first configured the Nvidia/Intel dual GPU system as reported in
&lt;a href=&#34;https://gist.github.com/alexlee-gk/76a409f62a53883971a18a11af93241b&#34; target=&#34;_blank&#34;&gt;alexlee-gk gist&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A list of annotated command is found below:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Download nvidia driver https://www.nvidia.com/Download/index.aspx?lang=en-us
sudo bash ./NVIDIA-Linux-x86_64-410.93.run --no-opengl-files
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&#34;src-block-caption&#34;&gt;
  &lt;span class=&#34;src-block-number&#34;&gt;Code Snippet 1&lt;/span&gt;:
  Driver installation in the laptop
&lt;/div&gt;

&lt;p&gt;The Nvidia-Docker installation is covered by &lt;a href=&#34;https://medium.com/@sh.tsang/docker-tutorial-5-nvidia-docker-2-0-installation-in-ubuntu-18-04-cb80f17cac65&#34; target=&#34;_blank&#34;&gt;SH Tsang Blog Post&lt;/a&gt;.
Since I had an older version of docker I had to purge it first&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt purge docker*
sudo apt-get remove docker docker-engine docker.io containerd runc
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&#34;src-block-caption&#34;&gt;
  &lt;span class=&#34;src-block-number&#34;&gt;Code Snippet 2&lt;/span&gt;:
  Deinstallation of older docker version
&lt;/div&gt;

&lt;p&gt;Next step was the installation of docker and the needed image&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo apt-key fingerprint 0EBFCD88
sudo add-apt-repository    &amp;quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable&amp;quot;
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io
apt-cache madison nvidia-docker2 nvidia-container-runtime
sudo apt-get install nvidia-docker2=2.0.3+docker18.09.2-1
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&#34;src-block-caption&#34;&gt;
  &lt;span class=&#34;src-block-number&#34;&gt;Code Snippet 3&lt;/span&gt;:
  Installation and setting of Nvidia-docker
&lt;/div&gt;

&lt;p&gt;A test of the docker image with nvidia-smi returns the expected image:&lt;/p&gt;




&lt;figure&gt;

&lt;img src=&#34;https://htafer.github.io/img/nvidia-smi.png&#34; alt=&#34;Figure 1: Output of `sudo docker run --runtime=nvidia --rm nvidia/cuda nvidia-smi`&#34; /&gt;



&lt;figcaption data-pre=&#34;Figure &#34; data-post=&#34;:&#34; &gt;
  
  &lt;p&gt;
    Figure 1: Output of &lt;code&gt;sudo docker run --runtime=nvidia --rm nvidia/cuda nvidia-smi&lt;/code&gt;
    
    
    
  &lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;

&lt;p&gt;We then pull the image containg cuda, cudnn and ubuntu-16.04 and start it&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo docker pull nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04
sudo docker run --runtime=nvidia --name guppy_gpu -i -t -v /home/htafer/work/zenity/fast5/:/fast5 \
nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04 /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&#34;src-block-caption&#34;&gt;
  &lt;span class=&#34;src-block-number&#34;&gt;Code Snippet 4&lt;/span&gt;:
  Pulling a ubuntu-16.04 image with nvidia,cuda and cudnn pre-configured, starting it and mounting the data on the directory /fast5  in the image
&lt;/div&gt;

&lt;p&gt;Inside the container, we install the gpu-enable guppy version&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget -q https://mirror.oxfordnanoportal.com/s1oftware/analysis/ont_guppy_cpu_2.3.3-1~xenial_amd64.deb
dpkg -i ont_guppy_2.3.1-1~xenial_amd64.deb --ignore-depends=nvidia-384,libcuda1-384
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&#34;src-block-caption&#34;&gt;
  &lt;span class=&#34;src-block-number&#34;&gt;Code Snippet 5&lt;/span&gt;:
  Installation of guppy in the container
&lt;/div&gt;

&lt;p&gt;Finally we can start the basecalling on cpu and gpu&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#CPU
guppy_basecaller --input_path . --save_path . --flowcell FLO-MIN106 --kit SQK-LSK109
#GPU
guppy_basecaller --input_path . --save_path . --flowcell FLO-MIN106 --kit SQK-LSK109 -x cuda:0
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&#34;src-block-caption&#34;&gt;
  &lt;span class=&#34;src-block-number&#34;&gt;Code Snippet 6&lt;/span&gt;:
  CPU/GPU-based basecalling with guppy
&lt;/div&gt;

&lt;p&gt;Basecalling on the MX150 is approximately &lt;strong&gt;6-8x faster than on my laptop i7-8550&lt;/strong&gt;. Champagne!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>KEGG analysis of regulated genes</title>
      <link>https://htafer.github.io/posts/kegg2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://htafer.github.io/posts/kegg2/</guid>
      <description>&lt;p&gt;This is another test&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Summary of Bioinformatics Expertise</title>
      <link>https://htafer.github.io/talk/desousa2019/</link>
      <pubDate>Thu, 24 Jan 2019 14:00:00 +0100</pubDate>
      
      <guid>https://htafer.github.io/talk/desousa2019/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Big sound and extreme fungi-xerophilic, halotolerant aspergilli and penicillia with low optimal temperature as invaders of historic pipe organs</title>
      <link>https://htafer.github.io/publication/sterflinger2018/</link>
      <pubDate>Mon, 31 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://htafer.github.io/publication/sterflinger2018/</guid>
      <description></description>
    </item>
    
    <item>
      <title>First evaluation of the microbiome of built cultural heritage by using the Ion Torrent next generation sequencing platform</title>
      <link>https://htafer.github.io/publication/tafer2018deterioration/</link>
      <pubDate>Mon, 31 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://htafer.github.io/publication/tafer2018deterioration/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Transcriptome study of an Exophiala dermatitidis PKS1 mutant on an ex vivo skin model: Is melanin important for infection?</title>
      <link>https://htafer.github.io/publication/tafer2018exo/</link>
      <pubDate>Mon, 31 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://htafer.github.io/publication/tafer2018exo/</guid>
      <description></description>
    </item>
    
    <item>
      <title>New Trends and Methodologies in Cultural Heritage Studies: Leonardos Codice del volo</title>
      <link>https://htafer.github.io/talk/leonardo2018/</link>
      <pubDate>Tue, 11 Dec 2018 14:00:00 +0100</pubDate>
      
      <guid>https://htafer.github.io/talk/leonardo2018/</guid>
      <description></description>
    </item>
    
    <item>
      <title>IF STONES COULD SPEAK...WHAT WOULD THEY TELL US ABOUT THEIR HISTORY?</title>
      <link>https://htafer.github.io/talk/statue2018/</link>
      <pubDate>Thu, 11 Oct 2018 14:00:00 +0200</pubDate>
      
      <guid>https://htafer.github.io/talk/statue2018/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Draft Genome Sequences of the Black Rock Fungus extlessiextgreaterKnufia petricolaextless/iextgreater and Its Spontaneous Nonmelanized Mutant</title>
      <link>https://htafer.github.io/publication/tesei2017/</link>
      <pubDate>Sun, 31 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://htafer.github.io/publication/tesei2017/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Genomic and transcriptomic analysis of the toluene degrading black yeast Cladophialophora immunda</title>
      <link>https://htafer.github.io/publication/tafer2017/</link>
      <pubDate>Sun, 31 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://htafer.github.io/publication/tafer2017/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Draft Genome of Debaryomyces fabryi CBS 789 T , Isolated from a</title>
      <link>https://htafer.github.io/publication/tafer2016a/</link>
      <pubDate>Sat, 31 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://htafer.github.io/publication/tafer2016a/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Genome sequence of the filamentous soil fungus chaetomium cochliodes reveals abundance of genes for heme enzymes from all peroxidase and catalase superfamilies</title>
      <link>https://htafer.github.io/publication/tafer2016chaeto/</link>
      <pubDate>Sat, 31 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://htafer.github.io/publication/tafer2016chaeto/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
